// This file should be generated by `supabase gen types typescript > types.ts`
// but is defined manually here based on the provided SQL schema.

export type UserRole = "client" | "worker" | "agent";
export type ProjectStatus =
  | "pending_payment_approval"
  | "rejected_payment"
  | "awaiting_worker_assignment"
  | "in_progress"
  | "pending_quote_approval"
  | "needs_changes"
  | "pending_final_approval"
  | "completed";
export type FilePurpose = "initial_brief" | "change_request" | "final_delivery";

export type Database = {
  public: {
    Tables: {
      users: {
        Row: {
          id: string
          full_name: string | null
          avatar_url: string | null
          role: UserRole
          created_at: string
        }
        Insert: {
          id: string
          full_name?: string | null
          avatar_url?: string | null
          role: UserRole
        }
        Update: {
          full_name?: string | null
          avatar_url?: string | null
          role?: UserRole
        }
      }
      projects: {
        Row: {
          id: number
          client_id: string
          worker_id: string | null
          agent_id: string | null
          title: string
          description: string | null
          status: ProjectStatus
          initial_word_count: number
          adjusted_word_count: number | null
          cost_gbp: number
          deadline: string
          created_at: string
          updated_at: string
        }
        Insert: {
          client_id: string
          worker_id?: string | null
          agent_id?: string | null
          title: string
          description?: string | null
          status?: ProjectStatus
          initial_word_count: number
          adjusted_word_count?: number | null
          cost_gbp: number
          deadline: string
        }
        Update: {
          worker_id?: string | null
          agent_id?: string | null
          title?: string
          description?: string | null
          status?: ProjectStatus
          initial_word_count?: number
          adjusted_word_count?: number | null
          cost_gbp?: number
          deadline?: string
        }
      }
      project_files: {
        Row: {
          id: number
          project_id: number
          uploader_id: string
          file_name: string
          file_path: string
          purpose: FilePurpose
          uploaded_at: string
        }
        Insert: {
          project_id: number
          uploader_id: string
          file_name: string
          file_path: string
          purpose: FilePurpose
        }
        Update: {
          file_name?: string
          file_path?: string
          purpose?: FilePurpose
        }
      }
      project_notes: {
        Row: {
          id: number
          project_id: number
          author_id: string
          note: string
          created_at: string
        }
        Insert: {
          project_id: number
          author_id: string
          note: string
        }
        Update: {
          note?: string
        }
      }
      project_change_requests: {
        Row: {
          id: number
          project_id: number
          instructions: string
          created_at: string
        }
        Insert: {
          project_id: number
          instructions: string
        }
        Update: {
          instructions?: string
        }
      }
      push_subscriptions: {
        Row: {
          id: number
          user_id: string
          subscription: object
          created_at: string
        }
        Insert: {
          user_id: string
          subscription: object
        }
        Update: {
          subscription?: object
        }
      }
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      [_ in never]: never
    }
    Enums: {
      user_role: UserRole
      project_status: ProjectStatus
      file_purpose: FilePurpose
    }
    CompositeTypes: {
      [_ in never]: never
    }
  }
}

export type Project = Database['public']['Tables']['projects']['Row'];
export type Profile = Database['public']['Tables']['users']['Row'];
export type ProjectFile = Database['public']['Tables']['project_files']['Row'];
export type ChangeRequest = Database['public']['Tables']['project_change_requests']['Row'];

export type ProjectWithDetails = Project & {
    project_files: ProjectFile[];
    project_change_requests: ChangeRequest[];
};


export interface NewProjectFormData {
  title: string;
  wordCount: number;
  deadline: string;
  guidance: string;
  files: File[];
}

export interface ChangesFormData {
  projectId: number;
  instructions: string;
  files: File[];
}